[defaults]
# 是否显示 Ansible 弃用警告（如旧版模块/参数）。
deprecation_warnings = True
# 是否检查 SSH 主机密钥（首次连接时提示确认，这里无需确认，自动yes）。
host_key_checking = False
# 是否生成重试文件（*.retry）用于失败任务重试。
retry_files_enabled = False
# 任何任务失败时立即终止整个 Playbook。
any_errors_fatal = True
# 在生成的文件头部添加注释，标记由 Ansible 管理。
ansible_managed = Ansible managed: {file} modified on %Y-%m-%d %H:%M:%S by {uid} on {host}
# 并发进程数（同时可以操作的主机数）。
fork = 20
# 日志文件路径。
log_path = $PWD/tmps/ansible.log

# 是否自动收集目标主机 Facts（OS、CPU、内存等信息，作为ansible中可引用的变量）。
# 仅在playbook中需要时启用（如使用 setup 模块），否则会影响性能，会变得很慢。
gathering = explicit

# Fact 缓存有效期（秒）。
fact_caching_timeout = 7200
fact_caching = jsonfile
fact_caching_connection = $PWD/tmps/facts

# 目标主机 Python 解释器路径。
ansible_python_interpreter=/usr/bin/python3
# 自定义 Roles 搜索路径。
roles_path = $PWD/roles
# 自定义 Filter 插件路径。
filter_plugins = $PWD/filter_plugins
# 默认 Inventory 文件路径。
inventory = $PWD/inventory/default/inventory.yml
# 默认模块（未指定时使用）。
module_name = shell
# 目标主机的默认 Shell。
ansible_shell_type = bash
# 是否显示跳过的任务。
display_skipped_hosts = false

# 配置 strategy 为 mitogen 来加速执行
strategy = mitogen_linear
strategy_plugins = $PWD/.venv/lib/python3.12/site-packages/ansible_mitogen/plugins/strategy

[ssh_connection]
# 启用管道化（减少 SSH 连接次数）。
pipelining = True
# 使用 SCP 替代 SFTP 传输文件。
scp_if_ssh = True
ssh_args = -o ControlMaster=auto -o ControlPersist=60m -o ConnectionAttempts=100 -o UserKnownHostsFile=/dev/null
# SSH 控制套接字路径。
control_path = ~/.ansible/%%r@%%h:%%p

[inventory]
# 忽略 Inventory 中匹配这些模式的主机或组名。
ignore_patterns = artifacts, credentials, certificate
